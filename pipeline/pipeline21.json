{
	"name": "pipeline21",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "SELECT LastLoadedTime FROM MetadataTracking WHERE TableName = 'employee';",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SqlServerTable11",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "IfCondition",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('Lookup1').output.firstRow.LastLoadedTime, null)\n\n",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Copy data2",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzurePostgreSqlSource",
									"query": {
										"value": "SELECT * FROM employee\nWHERE created_at > '@{activity('Lookup1').output.firstRow.LastLoadedTime}'",
										"type": "Expression"
									},
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "AzurePostgreSqlTable11",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "Parquet21",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Script2",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Copy data2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "SqlServer2",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": "update MetadataTracking set LastLoadedTime=current_timestamp"
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Delete1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzurePostgreSqlSource",
									"query": "SELECT * FROM employee",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "AzurePostgreSqlTable11",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "Parquet21",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Script1",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "SqlServer2",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": "update MetadataTracking set LastLoadedTime=current_timestamp"
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "Delete1",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "Parquet21",
									"type": "DatasetReference"
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						}
					]
				}
			},
			{
				"name": "lookup_error_msg",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "lookuperror",
					"value": {
						"value": "@string(activity('Lookup1').Error.message)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Lookupstatus",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "lookupstatus",
					"value": {
						"value": "@if(equals(activity('Lookup1').Status, 'Succeeded'), 'succeeded', 'failed')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "If_status",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "IfCondition",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "IfStatus",
					"value": {
						"value": "@if(equals(activity('IfCondition').Status, 'Succeeded'), 'succeeded', 'failed')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "endtime_pp",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "If_status",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "EndTime",
					"value": {
						"value": "@utcNow()",
						"type": "Expression"
					}
				}
			},
			{
				"name": "IfCondition_error",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "IfCondition",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "ifError",
					"value": {
						"value": "@string(activity('IfCondition').Error.message)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Cleaning_nbk",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "IfCondition",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Users/balakrushna.nayak.mca.2023@nist.edu/Cleaning Notebook",
					"baseParameters": {
						"container_name": "output",
						"storage_account": "storagekumarr",
						"file_path": "output/output/test.txt",
						"file_format": "parquet"
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricks1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Optimization_nbk",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "Cleaning_nbk",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Users/balakrushna.nayak.mca.2023@nist.edu/Optimization Notebook",
					"baseParameters": {
						"container_name": "gold",
						"storage_account": "storagekumarr",
						"file_path": "gold/final_gold/opt_df.parquet/part-00000-tid-4993657806633672324-a944574d-6e69-4fa5-a26b-ded2217b9859-3956-1-c000.snappy.parquet",
						"file_format": "parquet"
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricks1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Stored procedure1",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "endtime_pp",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[LogADFRunMetadata1]",
					"storedProcedureParameters": {
						"ADFName": {
							"value": {
								"value": "@pipeline().DataFactory",
								"type": "Expression"
							},
							"type": "String"
						},
						"Copydata_fullstatus": {
							"value": {
								"value": "@variables('Copydata_fullstatus')",
								"type": "Expression"
							},
							"type": "String"
						},
						"Copydata_incrementalstatus": {
							"value": {
								"value": "@variables('Copydata_incrementalstatus')",
								"type": "Expression"
							},
							"type": "String"
						},
						"EndTime": {
							"value": {
								"value": "@variables('EndTime')",
								"type": "Expression"
							},
							"type": "String"
						},
						"ifError": {
							"value": {
								"value": "@variables('ifError')",
								"type": "Expression"
							},
							"type": "String"
						},
						"IfStatus": {
							"value": {
								"value": "@variables('IfStatus')",
								"type": "Expression"
							},
							"type": "String"
						},
						"lookuperror": {
							"value": {
								"value": "@variables('lookuperror')",
								"type": "Expression"
							},
							"type": "String"
						},
						"LookupStatus": {
							"value": {
								"value": "@variables('lookupstatus')",
								"type": "Expression"
							},
							"type": "String"
						},
						"PipelineName": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"PipelineRunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"TriggerId": {
							"value": {
								"value": "@pipeline().TriggerId",
								"type": "Expression"
							},
							"type": "String"
						},
						"TriggerName": {
							"value": {
								"value": "@pipeline().TriggerName",
								"type": "Expression"
							},
							"type": "String"
						},
						"TriggerTime": {
							"value": {
								"value": "@pipeline().TriggerTime",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Copy data3",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Optimization_nbk",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ParquetSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "ParquetReadSettings"
						}
					},
					"sink": {
						"type": "AzurePostgreSqlSink",
						"writeBatchSize": 1000000,
						"writeBatchTimeout": "00:30:00",
						"writeMethod": "CopyCommand"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Parquet3",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AzurePostgreSqlTable11",
						"type": "DatasetReference"
					}
				]
			}
		],
		"parameters": {
			"LastLoadedTime": {
				"type": "string",
				"defaultValue": "@activity('Lookup1').output.firstRow.LastLoadedTime"
			}
		},
		"variables": {
			"EndTime": {
				"type": "String"
			},
			"lookupstatus": {
				"type": "String"
			},
			"IfStatus": {
				"type": "String"
			},
			"Copydata_fullstatus": {
				"type": "String"
			},
			"Copydata_incrementalstatus": {
				"type": "String"
			},
			"lookuperror": {
				"type": "String"
			},
			"ifError": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2025-05-13T08:58:53Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}